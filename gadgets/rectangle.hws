/*
**  rectangles.hws
**
**  Class that defines rectangle constructs in RapaGUI
**
**  By Samuel D. Crow
*/

rectangle={}
rectangle["prefix$"]="rect_"
rectangle["kind$"]="rectangle"
rectangle["count"]=0

rectangle["define"]={}
rectangle.define["kind$"]=rectangle.kind$
rectangle.define["type"]=rectangle
/*
**  rectangle Factory Method
**
**  Generates new rectangle
**
**  Accepts parent class handle
**
**  Returns initialized table of an empty rectangle
*/
Function rectangle:new(parent)
	local r=CopyTable(self.define, True)

	;add parent and type links
	r["parent"]=parent
	r["application"]=parent.application
	
	;set id$ for tree manipulation only
	r["count"]=self.count
	r["id$"]="rect"..Strstr(r.count)
	self.count=self.count+1

	return(r)
EndFunction

/*
**	rectangle Destructor method
**
**	Removes rectangle
*/
Function rectangle.define.delete(self)
	treeitems[moai.Get(self.id$, "UID")]=Nil
	moai.DoMethod("tree_hierarchy", "remove", self.id$)
	self=Nil
EndFunction

/*
**	Add Gadget
**
**	Impossible to add gadget to leaf element
*/
Function rectangle.addGadget(dest, type)
	moai.Request("Error","Impossible to add gadget to rectangle", "OK", "Error")
EndFunction

/*
**	Be Added 
**
**	Add yourself to a parent gadget or window
*/
Function rectangle.beAdded(data)
	moai.DoMethod("tree_hierarchy", "InsertLeaf", data.id$,
		data.parent.id$, "tail", "Rectangle")
	Local uid$=moai.Get(data.id$, "UID")
	treeitems[uid$]=data
EndFunction

/*
**  Editor Method
**
**  Creates a graphical requester indicating that rectangles can't be edited
*/
Function rectangle.editor(data)
	moai.Request("Rectangle", "Cannot edit a rectangle.", "OK", "Information")
EndFunction

/*
**	Copy Back
**
**	Do nothing because nothing to edit
*/
Function rectangle.CopyBack()
EndFunction

/*
**	Editor Done Function
**
**	Do nothing because requester modifies no fields
*/
Function rectangle.editorDone()
EndFunction

/*
**	Generate XML
**
**	Generate XML code string for this rectangle
*/
Function rectangle.define:generateXML$(indention)
	Return(RepeatStr("\t",indention).."<rectangle />\n")
EndFunction

/*
**	Preview XML
*/
rectangle.define.previewXML$=rectangle.define.generateXML$

/*
**	Save
**
**	Strip out invariants for saving buffer
*/
Function rectangle.save(self)
	self.parent=Nil
	self.application=Nil
	self.type=Nil
	self.id$=Nil
	self.count=Nil
EndFunction

/*
**	Load
**
**	Add all missing invariant fields to load buffer
*/
Function rectangle.load(self, myParent)
	self["count"]=rectangle.count
	self["id$"]="Rect"..StrStr(self.count)
	rectangle.count=rectangle.count+1
	self["generateXML$"]=rectangle.define.generateXML$
	self["previewXML$"]=rectangle.define.generateXML$
	self["delete"]=rectangle.define.delete
	self["parent"]=myParent
	self["application"]=myParent.application
	self["type"]=rectangle
	rectangle.beAdded(self)
EndFunction
