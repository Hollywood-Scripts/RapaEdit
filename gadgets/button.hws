/*
**  buttons.hws
**
**  Class that defines button constructs in RapaGUI
**
**  By Samuel D. Crow
*/

button={}
button["prefix$"]="btn_"
button["kind$"]="button"
button["count"]=0
button["edit"]=[[<?xml version="1.0" encoding="iso-8859-1"?>
<dialog id="btn_req" title="button">
	<colgroup columns="2">
		<label>ID</label>
		<textentry id="btn_id" />
		<label>Label</label>
		<textentry id="btn_label" />
		<hgroup>
			<button id="btn_ok" icon="12">OK</button>
			<button id="btn_cancel" icon="13">Cancel</button>
		</hgroup>
	</colgroup>
</dialog>]]

button["define"]={}

/*
**  button Factory Method
**
**  Generates new button
**
**  Accepts parent class handle
**
**  Returns initialized table of an empty button
*/
Function button:new(parent)
	local b=CopyTable(self.define)

	;add parent and type links
	b["parent"]=parent
	b["application"]=parent.application
	b["type"]=button
	
	;set id$ for tree manipulation only
	b["id$"]="btn"..Strstr(button.count)
	button.count=button.count+1
	
	;Set Label and locla ID to their default
	b["label$"]=b.id$
	b["name$"]=b.id$

	return(b)
EndFunction

/*
**	button Destructor method
**
**	Removes button
*/
Function button.define.delete(self)
	moai.DoMethod("tree_hierarchy", "remove", self.id$)
	self=Nil
EndFunction

/*
**	Add Gadget
**
**	Impossible to add gadget to leaf element
*/
Function button.addGadget(dest, type)
	moai.Request("Error","Impossible to add gadget to button", "OK", "Error")
EndFunction

/*
**	Be Added 
**
**	Add yourself to a parent gadget or window
*/
Function button.beAdded(data)
	moai.DoMethod("tree_hierarchy", "InsertLeaf", data.id$,
		data.parent.id$, "tail", "button "..data.label$)
	Local uid$=moai.Get(data.id$, "UID")
	treeitems[uid$]=data
EndFunction

/*
**  Editor Method
**
**  Creates a graphical requester indicating that buttons can't be edited
*/
Function button.editor(data)
	moai.CreateDialog(button.edit,"win")
	moai.Set("btn_label", "text", data.label$)
	moai.DoMethod("btn_label", "MarkAll")
	Global ModalUserData=data
	moai.DoMethod("btn_req", "ShowModal")
EndFunction

/*
**	Copy Back
**
**	Do nothing because nothing to edit
*/
Function button.CopyBack()
	Local current$=moai.Get("btn_id", "text")
	ModalUserData.label$=moai.Get("btn_label", "text")
	If (StrLen(current$)>1)
		If (IsAlpha(LeftStr(current$, 1)))
			ModalUserData.name$=current$
			Local active$=moai.Get("tree_hierarchy", "Active")
			moai.DoMethod(active$, "SetItem", 0, "button "..current$)
		Else
			moai.Request("ID", "ID contained illegal characters", "OK", "Warning")
		EndIf
	EndIf
EndFunction

/*
**	Editor Done Function
**
**	Do nothing because requester modifies no fields
*/
Function button.editorDone()
	moai.DoMethod("btn_req", "EndModal", 0)
EndFunction

/*
**	Generate XML
**
**	Generate XML code string for this recgangle
*/
Function button.define.generateXML$(indention)
	Local xml$=RepeatStr("\t",indention).."<button id=\""..self.id$.."\" >"..
		self.label$.."</button>\n"
	Return(xml$)
EndFunction
